name: Release -> Export PDF & Deploy Pages

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-and-export:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Install Slidev CLI
        run: npm i -g @slidev/cli

      - name: Install Playwright Chromium (for PDF export)
        run: npx playwright install --with-deps chromium

      - name: Build Slidev site (with base path for GitHub Pages)
        run: slidev build --base /${{ github.event.repository.name }}/
        # 依你的專案位置調整 working-directory:
        # working-directory: ./slides

      - name: SPA fallback (optional)
        run: cp dist/index.html dist/404.html
        # 可避免直接進入子路由後刷新導致 404

      - name: Export PDF
        run: slidev export --output slides.pdf
        # 若你的專案位於子資料夾，記得設定 working-directory

      - name: Attach PDF to this Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./slides.pdf
          asset_name: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.pdf
          asset_content_type: application/pdf

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build-and-export
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
