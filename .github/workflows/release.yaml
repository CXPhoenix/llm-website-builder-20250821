name: Release -> Export PDF & Deploy Pages

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-and-export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      # 安裝 Playwright 瀏覽器與系統相依套件（僅 Chromium）
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      # 建置網站（如部署到子路徑，記得設 base 為倉庫名）
      - name: Build Slidev site
        run: npx slidev build --base /${{ github.event.repository.name }}/

      # 可選：避免深連結重新整理 404
      - name: SPA fallback (optional)
        run: cp dist/index.html dist/404.html

      # 匯出 PDF
      - name: Export PDF
        run: npx slidev export --output slides.pdf

      # 附加 PDF 到本次 Release
      - name: Attach PDF to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./slides.pdf
          asset_name: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}.pdf
          asset_content_type: application/pdf

      # 以下維持 Pages 的部署流程（若你已設定，沿用即可）
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build-and-export
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
